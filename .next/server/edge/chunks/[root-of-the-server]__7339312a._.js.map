{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/ (unsupported edge import crypto)"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`crypto`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/config.ts"],"sourcesContent":["const config = {\r\n    env: {\r\n        apiEndpoint: process.env.NEXT_PUBLIC_API_ENDPOINT!,\r\n        prodApiEndpoint: process.env.NEXT_PUBLIC_PROD_API_ENDPOINT!,\r\n        imagekit: {\r\n            publicKey: process.env.NEXT_PUBLIC_IMAGEKIT_PUBLIC_KEY!,\r\n            urlEndpoint: process.env.NEXT_PUBLIC_IMAGEKIT_URL_ENDPOINT!,\r\n            privateKey: process.env.IMAGEKIT_PRIVATE_KEY!,\r\n        },\r\n        databaseUrl: process.env.DATABASE_URL!,\r\n        upstash: {\r\n            redisUrl: process.env.UPSTASH_REDIS_URL!,\r\n            redisToken: process.env.UPSTASH_REDIS_TOKEN!,\r\n            qstashUrl: process.env.QSTASH_URL!,\r\n            qstashToken: process.env.QSTASH_TOKEN!,\r\n        },\r\n        resendToken: process.env.RESEND_TOKEN!,\r\n    },\r\n};\r\n\r\nexport default config;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACX,KAAK;QACD,WAAW;QACX,eAAe;QACf,UAAU;YACN,SAAS;YACT,WAAW;YACX,YAAY,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,aAAa,QAAQ,GAAG,CAAC,YAAY;QACrC,SAAS;YACL,UAAU,QAAQ,GAAG,CAAC,iBAAiB;YACvC,YAAY,QAAQ,GAAG,CAAC,mBAAmB;YAC3C,WAAW,QAAQ,GAAG,CAAC,UAAU;YACjC,aAAa,QAAQ,GAAG,CAAC,YAAY;QACzC;QACA,aAAa,QAAQ,GAAG,CAAC,YAAY;IACzC;AACJ;uCAEe"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/database/drizzle.ts"],"sourcesContent":["import config from \"@/lib/config\";\r\nimport { drizzle } from \"drizzle-orm/neon-http\";\r\nimport { neon } from \"@neondatabase/serverless\";\r\n\r\nconst sql = neon(config.env.databaseUrl);\r\n\r\nexport const db = drizzle({ client: sql, casing: \"snake_case\" });\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,MAAM,CAAA,GAAA,8JAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,UAAM,CAAC,GAAG,CAAC,WAAW;AAEhC,MAAM,KAAK,CAAA,GAAA,gKAAA,CAAA,UAAO,AAAD,EAAE;IAAE,QAAQ;IAAK,QAAQ;AAAa"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/database/schema.ts"],"sourcesContent":["import {\r\n    varchar,\r\n    uuid,\r\n    integer,\r\n    text,\r\n    pgTable,\r\n    date,\r\n    pgEnum,\r\n    timestamp,\r\n} from \"drizzle-orm/pg-core\";\r\n\r\nexport const STATUS_ENUM = pgEnum(\"status\", [\r\n    \"PENDING\",\r\n    \"APPROVED\",\r\n    \"REJECTED\",\r\n]);\r\nexport const ROLE_ENUM = pgEnum(\"role\", [\"USER\", \"ADMIN\"]);\r\nexport const BORROW_STATUS_ENUM = pgEnum(\"borrow_status\", [\r\n    \"BORROWED\",\r\n    \"RETURNED\",\r\n]);\r\n\r\nexport const users = pgTable(\"users\", {\r\n    id: uuid(\"id\").notNull().primaryKey().defaultRandom().unique(),\r\n    fullName: varchar(\"full_name\", { length: 255 }).notNull(),\r\n    email: text(\"email\").notNull().unique(),\r\n    //universityId: integer(\"university_id\").notNull().unique(),\r\n    password: text(\"password\").notNull(),\r\n    //universityCard: text(\"university_card\").default(\"\"),\r\n    status: STATUS_ENUM(\"status\").default(\"PENDING\"),\r\n    role: ROLE_ENUM(\"role\").default(\"USER\"),\r\n    lastActivityDate: date(\"last_activity_date\").defaultNow(),\r\n    createdAt: timestamp(\"created_at\", {\r\n        withTimezone: true,\r\n    }).defaultNow(),\r\n});\r\n\r\nexport const books = pgTable(\"books\", {\r\n    id: uuid(\"id\").notNull().primaryKey().defaultRandom().unique(),\r\n    title: varchar(\"title\", { length: 255 }).notNull(),\r\n    author: varchar(\"author\", { length: 255 }).notNull(),\r\n    genre: text(\"genre\").notNull(),\r\n    rating: integer(\"rating\").notNull(),\r\n    coverUrl: text(\"cover_url\").notNull(),\r\n    coverColor: varchar(\"cover_color\", { length: 7 }).notNull(),\r\n    description: text(\"description\").notNull(),\r\n    totalCopies: integer(\"total_copies\").notNull().default(1),\r\n    availableCopies: integer(\"available_copies\").notNull().default(0),\r\n    videoUrl: text(\"video_url\").notNull(),\r\n    summary: varchar(\"summary\").notNull(),\r\n    createdAt: timestamp(\"created_at\", { withTimezone: true }).defaultNow(),\r\n});\r\n\r\nexport const borrowRecords = pgTable(\"borrow_records\", {\r\n    id: uuid(\"id\").notNull().primaryKey().defaultRandom().unique(),\r\n    userId: uuid(\"user_id\")\r\n        .references(() => users.id)\r\n        .notNull(),\r\n    bookId: uuid(\"book_id\")\r\n        .references(() => books.id)\r\n        .notNull(),\r\n    borrowDate: timestamp(\"borrow_date\", { withTimezone: true })\r\n        .defaultNow()\r\n        .notNull(),\r\n    dueDate: date(\"due_date\").notNull(),\r\n    returnDate: date(\"return_date\"),\r\n    status: BORROW_STATUS_ENUM(\"status\").default(\"BORROWED\").notNull(),\r\n    createdAt: timestamp(\"created_at\", { withTimezone: true }).defaultNow(),\r\n});\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/auth.ts"],"sourcesContent":["import NextAuth, { User } from \"next-auth\";\r\nimport { compare } from \"bcryptjs\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { db } from \"@/database/drizzle\";\r\nimport { users } from \"@/database/schema\";\r\nimport { eq } from \"drizzle-orm\";\r\n\r\nexport const { handlers, signIn, signOut, auth } = NextAuth({\r\n    session: {\r\n        strategy: \"jwt\",\r\n    },\r\n    providers: [\r\n        CredentialsProvider({\r\n            async authorize(credentials) {\r\n                if (!credentials?.email || !credentials?.password) {\r\n                    return null;\r\n                }\r\n\r\n                const user = await db\r\n                    .select()\r\n                    .from(users)\r\n                    .where(eq(users.email, credentials.email.toString()))\r\n                    .limit(1);\r\n\r\n                if (user.length === 0) return null;\r\n\r\n                const isPasswordValid = await compare(\r\n                    credentials.password.toString(),\r\n                    user[0].password,\r\n                );\r\n\r\n                if (!isPasswordValid) return null;\r\n\r\n                return {\r\n                    id: user[0].id.toString(),\r\n                    email: user[0].email,\r\n                    name: user[0].fullName,\r\n                } as User;\r\n            },\r\n        }),\r\n    ],\r\n    pages: {\r\n        signIn: \"/sign-in\",\r\n    },\r\n    callbacks: {\r\n        async jwt({ token, user }) {\r\n            if (user) {\r\n                token.id = user.id;\r\n                token.name = user.name;\r\n            }\r\n\r\n            return token;\r\n        },\r\n        async session({ session, token }) {\r\n            if (session.user) {\r\n                session.user.id = token.id as string;\r\n                session.user.name = token.name as string;\r\n            }\r\n\r\n            return session;\r\n        },\r\n    },\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,UAAQ,AAAD,EAAE;IACxD,SAAS;QACL,UAAU;IACd;IACA,WAAW;QACP,CAAA,GAAA,kKAAA,CAAA,UAAmB,AAAD,EAAE;YAChB,MAAM,WAAU,WAAW;gBACvB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBAC/C,OAAO;gBACX;gBAEA,MAAM,OAAO,MAAM,2HAAA,CAAA,KAAE,CAChB,MAAM,GACN,IAAI,CAAC,0HAAA,CAAA,QAAK,EACV,KAAK,CAAC,CAAA,GAAA,0KAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,QAAK,CAAC,KAAK,EAAE,YAAY,KAAK,CAAC,QAAQ,KAChD,KAAK,CAAC;gBAEX,IAAI,KAAK,MAAM,KAAK,GAAG,OAAO;gBAE9B,MAAM,kBAAkB,MAAM,CAAA,GAAA,kJAAA,CAAA,UAAO,AAAD,EAChC,YAAY,QAAQ,CAAC,QAAQ,IAC7B,IAAI,CAAC,EAAE,CAAC,QAAQ;gBAGpB,IAAI,CAAC,iBAAiB,OAAO;gBAE7B,OAAO;oBACH,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ;oBACvB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK;oBACpB,MAAM,IAAI,CAAC,EAAE,CAAC,QAAQ;gBAC1B;YACJ;QACJ;KACH;IACD,OAAO;QACH,QAAQ;IACZ;IACA,WAAW;QACP,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACrB,IAAI,MAAM;gBACN,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,IAAI,GAAG,KAAK,IAAI;YAC1B;YAEA,OAAO;QACX;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC5B,IAAI,QAAQ,IAAI,EAAE;gBACd,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAClC;YAEA,OAAO;QACX;IACJ;AACJ"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["export { auth as middleware } from \"@/auth\";\r\n"],"names":[],"mappings":";AAAA"}}]
}