{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/database/redis.ts"],"sourcesContent":["import { Redis } from \"@upstash/redis\";\r\nimport config from \"@/lib/config\";\r\n\r\nconst redis = new Redis({\r\n    url: config.env.upstash.redisUrl,\r\n    token: config.env.upstash.redisToken,\r\n});\r\n\r\nexport default redis;\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEA,MAAM,QAAQ,IAAI,6JAAA,CAAA,QAAK,CAAC;IACpB,KAAK,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ;IAChC,OAAO,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU;AACxC;uCAEe","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/lib/ratelimit.ts"],"sourcesContent":["import { Ratelimit } from \"@upstash/ratelimit\";\r\nimport redis from \"@/database/redis\";\r\n\r\nconst ratelimit = new Ratelimit({\r\n    redis,\r\n    limiter: Ratelimit.fixedWindow(5, \"1m\"),\r\n    analytics: true,\r\n    prefix: \"@upstash/ratelimit\",\r\n});\r\n\r\nexport default ratelimit;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,YAAY,IAAI,uJAAA,CAAA,YAAS,CAAC;IAC5B,OAAA,iHAAA,CAAA,UAAK;IACL,SAAS,uJAAA,CAAA,YAAS,CAAC,WAAW,CAAC,GAAG;IAClC,WAAW;IACX,QAAQ;AACZ;uCAEe","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/lib/workflow.ts"],"sourcesContent":["import { Client as WorkflowClient } from \"@upstash/workflow\";\r\nimport { Client as QStashClient, resend } from \"@upstash/qstash\";\r\nimport config from \"@/lib/config\";\r\n\r\nexport const workflowClient = new WorkflowClient({\r\n    baseUrl: config.env.upstash.qstashUrl,\r\n    token: config.env.upstash.qstashToken,\r\n});\r\n\r\nconst qstashClient = new QStashClient({\r\n    token: config.env.upstash.qstashToken,\r\n});\r\n\r\nexport const sendEmail = async ({\r\n                                    email,\r\n                                    subject,\r\n                                    message,\r\n                                }: {\r\n    email: string;\r\n    subject: string;\r\n    message: string;\r\n}) => {\r\n    await qstashClient.publishJSON({\r\n        api: {\r\n            name: \"email\",\r\n            provider: resend({ token: config.env.resendToken }),\r\n        },\r\n        body: {\r\n            from: \"Himaani Srivatsava <contact@himaanisrivatsava.official@gmail.com>\",\r\n            to: [email],\r\n            subject,\r\n            html: message,\r\n        },\r\n    });\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;AAEO,MAAM,iBAAiB,IAAI,+JAAA,CAAA,SAAc,CAAC;IAC7C,SAAS,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS;IACrC,OAAO,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW;AACzC;AAEA,MAAM,eAAe,IAAI,yJAAA,CAAA,SAAY,CAAC;IAClC,OAAO,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW;AACzC;AAEO,MAAM,YAAY,OAAO,EACI,KAAK,EACL,OAAO,EACP,OAAO,EAK1C;IACG,MAAM,aAAa,WAAW,CAAC;QAC3B,KAAK;YACD,MAAM;YACN,UAAU,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE;gBAAE,OAAO,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,WAAW;YAAC;QACrD;QACA,MAAM;YACF,MAAM;YACN,IAAI;gBAAC;aAAM;YACX;YACA,MAAM;QACV;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/lib/actions/auth.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { eq } from \"drizzle-orm\";\r\nimport { db } from \"@/database/drizzle\";\r\nimport { users } from \"@/database/schema\";\r\nimport { hash } from \"bcryptjs\";\r\nimport { signIn } from \"@/auth\";\r\nimport { headers } from \"next/headers\";\r\nimport ratelimit from \"@/lib/ratelimit\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { workflowClient } from \"@/lib/workflow\";\r\nimport config from \"@/lib/config\";\r\n\r\nexport const signInWithCredentials = async (\r\n    params: Pick<AuthCredentials, \"email\" | \"password\">,\r\n) => {\r\n    const { email, password } = params;\r\n\r\n    const ip = (await headers()).get(\"x-forwarded-for\") || \"127.0.0.1\";\r\n    const { success } = await ratelimit.limit(ip);\r\n\r\n    if (!success) return redirect(\"/too-fast\");\r\n\r\n    try {\r\n        const result = await signIn(\"credentials\", {\r\n            email,\r\n            password,\r\n            redirect: false,\r\n        });\r\n\r\n        if (result?.error) {\r\n            return { success: false, error: result.error };\r\n        }\r\n\r\n        return { success: true };\r\n    } catch (error) {\r\n        console.log(error, \"Signin error\");\r\n        return { success: false, error: \"Signin error\" };\r\n    }\r\n};\r\n\r\nexport const signUp = async (params: AuthCredentials) => {\r\n    const { fullName, email, universityId, password, /*universityCard*/ } = params;\r\n\r\n    const ip = (await headers()).get(\"x-forwarded-for\") || \"127.0.0.1\";\r\n    const { success } = await ratelimit.limit(ip);\r\n\r\n    if (!success) return redirect(\"/too-fast\");\r\n\r\n    const existingUser = await db\r\n        .select()\r\n        .from(users)\r\n        .where(eq(users.email, email))\r\n        .limit(1);\r\n\r\n    if (existingUser.length > 0) {\r\n        return { success: false, error: \"User already exists\" };\r\n    }\r\n\r\n    const hashedPassword = await hash(password, 10);\r\n\r\n    try {\r\n        await db.insert(users).values({\r\n            fullName,\r\n            email,\r\n            //universityId,\r\n            password: hashedPassword,\r\n            //universityCard: universityCard ?? \"\",\r\n        });\r\n\r\n        await workflowClient.trigger({\r\n            url: `${config.env.prodApiEndpoint}/api/workflows/onboarding`,\r\n            body: {\r\n                email,\r\n                fullName,\r\n            },\r\n        });\r\n\r\n        await signInWithCredentials({ email, password });\r\n\r\n        return { success: true };\r\n    } catch (error) {\r\n        console.log(error, \"Signup error\");\r\n        return { success: false, error: \"Signup error\" };\r\n    }\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AAEO,MAAM,wBAAwB,OACjC;IAEA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,MAAM,KAAK,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,sBAAsB;IACvD,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,gHAAA,CAAA,UAAS,CAAC,KAAK,CAAC;IAE1C,IAAI,CAAC,SAAS,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAE9B,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,oGAAA,CAAA,SAAM,AAAD,EAAE,eAAe;YACvC;YACA;YACA,UAAU;QACd;QAEA,IAAI,QAAQ,OAAO;YACf,OAAO;gBAAE,SAAS;gBAAO,OAAO,OAAO,KAAK;YAAC;QACjD;QAEA,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,OAAO;QACnB,OAAO;YAAE,SAAS;YAAO,OAAO;QAAe;IACnD;AACJ;AAEO,MAAM,SAAS,OAAO;IACzB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAsB,GAAG;IAExE,MAAM,KAAK,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,sBAAsB;IACvD,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,gHAAA,CAAA,UAAS,CAAC,KAAK,CAAC;IAE1C,IAAI,CAAC,SAAS,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAE9B,MAAM,eAAe,MAAM,mHAAA,CAAA,KAAE,CACxB,MAAM,GACN,IAAI,CAAC,kHAAA,CAAA,QAAK,EACV,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,kHAAA,CAAA,QAAK,CAAC,KAAK,EAAE,QACtB,KAAK,CAAC;IAEX,IAAI,aAAa,MAAM,GAAG,GAAG;QACzB,OAAO;YAAE,SAAS;YAAO,OAAO;QAAsB;IAC1D;IAEA,MAAM,iBAAiB,MAAM,CAAA,GAAA,iIAAA,CAAA,OAAI,AAAD,EAAE,UAAU;IAE5C,IAAI;QACA,MAAM,mHAAA,CAAA,KAAE,CAAC,MAAM,CAAC,kHAAA,CAAA,QAAK,EAAE,MAAM,CAAC;YAC1B;YACA;YACA,eAAe;YACf,UAAU;QAEd;QAEA,MAAM,+GAAA,CAAA,iBAAc,CAAC,OAAO,CAAC;YACzB,KAAK,GAAG,6GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,eAAe,CAAC,yBAAyB,CAAC;YAC7D,MAAM;gBACF;gBACA;YACJ;QACJ;QAEA,MAAM,sBAAsB;YAAE;YAAO;QAAS;QAE9C,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,OAAO;QACnB,OAAO;YAAE,SAAS;YAAO,OAAO;QAAe;IACnD;AACJ;;;IAxEa;IA4BA;;AA5BA,+OAAA;AA4BA,+OAAA","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/.next-internal/server/app/%28auth%29/sign-up/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signUp as '7fbe83b31f93031034ba524490ffd436342b658ea8'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/app/%28auth%29/sign-up/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(auth)/sign-up/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(auth)/sign-up/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Himaani/WebstormProjects/BibliaLMS/app/%28auth%29/sign-up/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(auth)/sign-up/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(auth)/sign-up/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}